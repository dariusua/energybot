from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, KeyboardButton, InlineKeyboardButton


def register_to_bot():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"))
    return markup


def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton("üîÅ –ó–º—ñ–Ω–∏—Ç–∏ –≥—Ä—É–ø—É"), KeyboardButton("üîï –í—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")).add(KeyboardButton("üñº –§–æ—Ç–æ –≥—Ä–∞—Ñ—ñ–∫—É"), KeyboardButton("‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"))
    return markup


def connect_to_group():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ì—Ä—É–ø–∞ 1", callback_data='group1'), InlineKeyboardButton("–ì—Ä—É–ø–∞ 2", callback_data='group2'), InlineKeyboardButton("–ì—Ä—É–ø–∞ 3", callback_data='group3'), InlineKeyboardButton("–î—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤–æ—é –≥—Ä—É–ø—É", url='https://poweroff.loe.lviv.ua/gav_city3'))
    return markup


def support():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥"))
    return markup


def settings():
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton("üîò –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è", callback_data="maybe_notice"),
               InlineKeyboardButton("üåô –ù—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="night_notice"),
               InlineKeyboardButton("üïê –ß–∞—Å –¥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="time_to_notice"),
               InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_menu"))
    return markup


def change_maybe(what_maybe_now):
    markup = InlineKeyboardMarkup(row_width=1)
    if what_maybe_now == 1:
        markup.add(InlineKeyboardButton(text="üîò –í–∏–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è", callback_data="maybe_notice_off"),
                   InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings"))
        text = "üîò –°–ü–û–í–Ü–©–ï–ù–ù–Ø –ü–†–û –ú–û–ñ–õ–ò–í–Ü –í–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø: \n\n‚úÖ –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤–∫–ª—é—á–µ–Ω—ñ. \n–î–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:"
    elif what_maybe_now == 0:
        markup.add(InlineKeyboardButton(text="üîò –í–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è", callback_data="maybe_notice_on"),
                   InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings"))
        text = "üîò –°–ü–û–í–Ü–©–ï–ù–ù–Ø –ü–†–û –ú–û–ñ–õ–ò–í–Ü –í–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø: \n\n‚Ä¢ –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω—ñ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó, –±–æ—Ç –±—É–¥–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è(–¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ü–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∞—à–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É).\n‚ùå –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Ç–∞–∫—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∏–∫–ª—é—á–µ–Ω—ñ, –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:"
    return markup, text


def change_night(what_night_now):
    markup = InlineKeyboardMarkup(row_width=1)
    if what_night_now == 1:
        markup.add(InlineKeyboardButton("üåô –í–∏–∫–ª—é—á–∏—Ç–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="night_notice_off"), InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings"))
        text = "üåô –ù–Ü–ß–ù–Ü –°–ü–û–í–Ü–©–ï–ù–ù–Ø: \n\n‚úÖ –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 07:59) –≤–∫–ª—é—á–µ–Ω—ñ. \n–î–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:"
    elif what_night_now == 0:
        markup.add(InlineKeyboardButton("üåô –í–∫–ª—é—á–∏—Ç–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="night_notice_on"), InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings"))
        text = "üåô –ù–Ü–ß–ù–Ü –°–ü–û–í–Ü–©–ï–ù–ù–Ø: \n\n‚Ä¢ –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω—ñ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó, –±–æ—Ç –±—É–¥–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 07:59). \n‚ùå –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Ç–∞–∫—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∏–∫–ª—é—á–µ–Ω—ñ, –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:"
    return markup, text


def change_time(what_time_now):
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton("üïê 10 —Ö–≤–∏–ª–∏–Ω", callback_data="set_10min"), InlineKeyboardButton("üïì 30 —Ö–≤–∏–ª–∏–Ω", callback_data="set_30min"), InlineKeyboardButton("üïî 60 —Ö–≤–∏–ª–∏–Ω", callback_data="set_60min"), InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings"))
    text = {10: "üîü", 30: "3Ô∏è‚É£0Ô∏è‚É£", 60: "6Ô∏è‚É£0Ô∏è‚É£"}.get(int(what_time_now), int(what_time_now))
    return markup, text
