#  ENERGYLOEBOT version 0.9 by dariusua

import sqlite3
import time
import telebot
import schedule
import logging
from datetime import datetime, timedelta
from telebot import types
from threading import Thread
from config import TOKEN

logging.basicConfig(level=logging.INFO)
bot = telebot.TeleBot(TOKEN)

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
item2 = types.KeyboardButton("üîï –í—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
item3 = types.KeyboardButton("üìñ –ü–æ–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫(—Ñ–æ—Ç–æ)")
item4 = types.KeyboardButton("‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
markup.add(item1, item2).row(item3).add(item4)

markup_settings = types.InlineKeyboardMarkup(row_width = 1)
item1 = types.InlineKeyboardButton(text="üåô –ù—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data='night_notice')
#item2 = types.InlineKeyboardButton(text="üïê –ó–º—ñ–Ω–∏—Ç–∏ —á–∞—Å –¥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data='change_time_for_notice')
markup_settings.add(item1)#, item2)

# –ü–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
@bot.message_handler(commands=['start'])
def start(message: types.Message):
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS database(
        user_id INTEGER PRIMARY KEY AUTOINCREMENT,
        [group_number] INTEGER NOT NULL,
        active INTEGER DEFAULT(1)
    )""")
    cursor.execute("ALTER TABLE database ADD time_to INTEGER DEFAULT(30)")
    connect.commit()
    bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤—ñ—Ç üëã \n\nü§ñ –¶–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑–∞–¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ "–õ—å–≤—ñ–≤–æ–±–ª–µ–Ω–µ—Ä–≥–æ" –ø—Ä–æ –ø–ª–∞–Ω–æ–≤—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É –≤–∞—à–æ–º—É –Ω–∞—Å–µ–ª–µ–Ω–æ–º—É –ø—É–Ω–∫—Ç—ñ. \n‚úèÔ∏è –ë–æ—Ç –±—É–¥–µ –≤—ñ–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è–º –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω –¥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞. \n‚ùóÔ∏è –ë–æ—Ç –Ω–µ —î –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–º! \n\nüìã –î–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∏–∂—á–µ.', reply_markup=markup)

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
@bot.message_handler(commands=['send'])
def send(message: types.Message):
    if message.from_user.id == 880691612:
        connect = sqlite3.connect('database.db')
        cursor = connect.cursor()
        results = cursor.execute("SELECT user_id FROM database").fetchall()
        text = message.text[6:]
        for row in results:
            active_value = row[0]
            set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
            try:
                bot.send_message(row[0], {text})
                if set_active != 1:
                    cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
            except:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
        bot.send_message(880691612, f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ü–†–û –†–û–ó–°–ò–õ–ö–£: \n\n{text}")
    else:
        bot.send_message(message.from_user.id, "–î–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏ –í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∞–¥–º—ñ–Ω–æ–º.")
    connect.commit()

# –†–æ–±–æ—Ç–∞ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(content_types='text')
def message_reply(message: types.Message):
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    person_id = message.chat.id

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if message.text == "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è":
        markup_group = types.InlineKeyboardMarkup()
        item1 = types.InlineKeyboardButton(text="–ì—Ä—É–ø–∞ 1", callback_data='group1')
        item2 = types.InlineKeyboardButton(text="–ì—Ä—É–ø–∞ 2", callback_data='group2')
        item3 = types.InlineKeyboardButton(text="–ì—Ä—É–ø–∞ 3", callback_data='group3')
        learngroup = types.InlineKeyboardButton(text="–î—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤–æ—é –≥—Ä—É–ø—É", url='https://poweroff.loe.lviv.ua/gav_city3')
        markup_group.add(item1, item2, item3, learngroup)
        bot.send_message(message.chat.id, f'‚úÖ –î–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑ –Ω–æ–º–µ—Ä–æ–º –≤–∞—à–æ—ó –≥—Ä—É–ø–∏. \n‚ùì –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –≥—Ä—É–ø–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–î—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤–æ—é –≥—Ä—É–ø—É", —Ç–∞ –ø–µ—Ä–µ–π—à–æ–≤—à–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —ñ –≤–≤—ñ–≤—à–∏ —Å–≤–æ—ó –¥–∞–Ω—ñ, –≤–∏ –∑–º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤–æ—é –≥—Ä—É–ø—É.', reply_markup=markup_group)

# –í—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å
    elif message.text == "üîï –í—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è":
        if message.from_user.username is None:
            if message.from_user.last_name is None:
                loginchat = f"{message.from_user.first_name}"
            else:
                loginchat = f"{message.from_user.first_name} {message.from_user.last_name}"
        else:
            loginchat = f"@{message.from_user.username}"
        cursor.execute("DELETE FROM `database` WHERE `user_id` = ?", (person_id,))
        bot.send_message(message.from_user.id, '‚ùå –í–∏ –≤—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—è –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó. –î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞!üò¢ \n\n–©–æ–± –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –∑–Ω–æ–≤—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∏–∂—á–µ.', reply_markup=markup)
        bot.send_message(880691612, f"{loginchat} –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è(-–ª–∞—Å—å) –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å")

# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–æ—Ç–æ –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º –≤—ñ–¥–∫–ª—é—á–µ–Ω—å
    elif message.text == "üìñ –ü–æ–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫(—Ñ–æ—Ç–æ)":
        data_photo = cursor.execute("SELECT group_number FROM database WHERE user_id = ?", (message.from_user.id,)).fetchone()
        try:
            if data_photo[0] == 1:
                photo = open('1group.png', 'rb')
                bot.send_photo(message.from_user.id, photo)
            elif data_photo[0] == 2:
                photo = open('2group.png', 'rb')
                bot.send_photo(message.from_user.id, photo)
            elif data_photo[0] == 3:
                photo = open('3group.png', 'rb')
                bot.send_photo(message.from_user.id, photo)
        except:
            bot.send_message(message.from_user.id, "–ü–æ–º–∏–ª–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –¥–æ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏.")
        connect.commit()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    elif message.text == "‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è":
        bot.send_message(message.from_user.id, "‚öô –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø:", reply_markup=markup_settings)

    elif message.text == "‚¨Ö –ù–∞–∑–∞–¥":
        bot.send_message(message.from_user.id, "–ú–ï–ù–Æ:", reply_markup=markup)

    elif message.text == "/start":
        pass

    elif message.text == "/send":
        pass

    else:
        bot.send_message(message.from_user.id, "–¶—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏ –Ω–µ —ñ—Å–Ω—É—î.")

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –¥–ª—è 1 –≥—Ä—É–ø–∏
def send_g1():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = ?", ("1")).fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 1Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    bot.send_message(880691612, f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ü–†–û –†–û–ó–°–ò–õ–ö–£: \n\n{text}")
    connect.commit()

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –¥–ª—è 2 –≥—Ä—É–ø–∏
def send_g2():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = ?", ("2")).fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 2Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    bot.send_message(880691612, f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ü–†–û –†–û–ó–°–ò–õ–ö–£: \n\n{text}")
    connect.commit()

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –¥–ª—è 3 –≥—Ä—É–ø–∏
def send_g3():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = ?", ("3")).fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 3Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    bot.send_message(880691612, f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ü–†–û –†–û–ó–°–ò–õ–ö–£: \n\n{text}")
    connect.commit()

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –Ω—ñ—á–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è 1 –≥—Ä—É–ø–∏
def send_night_g1():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = '1' AND night = '1'").fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 1Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    connect.commit()

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –Ω—ñ—á–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è 2 –≥—Ä—É–ø–∏
def send_night_g2():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = '2' AND night = '1'").fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 2Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    connect.commit()

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏ –Ω—ñ—á–Ω–∏—Ö —Å–ø–æ–≤—ñ—ñ—â–µ–Ω—å –¥–ª—è 3 –≥—Ä—É–ø–∏
def send_night_g3():
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    results = cursor.execute("SELECT user_id FROM database WHERE group_number = '3' AND night = '1'").fetchall()
    howmuchtime1 = datetime.now() + timedelta(minutes=150)
    howmuchtime2 = howmuchtime1 + timedelta(hours=4)
    text = f"‚Äº –ó–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º 3Ô∏è‚É£ –≥—Ä—É–ø–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤ –ø–µ—Ä—ñ–æ–¥ –∑ {howmuchtime1.strftime('%H:%M')} –¥–æ {howmuchtime2.strftime('%H:%M')}!"
    for row in results:
        active_value = row[0]
        set_active = cursor.execute("SELECT active FROM database WHERE user_id = ?", (active_value,))
        try:
            bot.send_message(row[0], {text})
            if set_active != 1:
                cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("1", active_value))
        except:
            cursor.execute("UPDATE database SET active = ? WHERE user_id = ?", ("0", active_value))
    connect.commit()

time_for_sche = datetime.now() + timedelta(minutes=1)
time_for_sched = time_for_sche.strftime('%H:%M')

#–†–æ–∑—Å–∏–ª–∫–∞ –¥–ª—è 1 –≥—Ä—É–ø–∏
schedule.every().sunday.at("22:30").do(send_night_g1)
schedule.every().monday.at("10:30").do(send_g1)
schedule.every().tuesday.at("06:30").do(send_g1)
schedule.every().tuesday.at("18:30").do(send_g1)
schedule.every().wednesday.at("02:30").do(send_night_g1)
schedule.every().wednesday.at("14:30").do(send_g1)
schedule.every().wednesday.at("22:30").do(send_night_g1)
schedule.every().thursday.at("10:30").do(send_g1)
schedule.every().friday.at("06:30").do(send_g1)
schedule.every().friday.at("18:30").do(send_g1)
schedule.every().saturday.at("02:30").do(send_night_g1)
schedule.every().saturday.at("14:30").do(send_g1)
schedule.every().sunday.at("10:30").do(send_g1)

#–†–æ–∑—Å–∏–ª–∫–∞ –¥–ª—è 2 –≥—Ä—É–ø–∏
schedule.every().monday.at("06:30").do(send_g2)
schedule.every().monday.at("18:30").do(send_g2)
schedule.every().tuesday.at("02:30").do(send_night_g2)
schedule.every().tuesday.at("14:30").do(send_g2)
schedule.every().tuesday.at("22:30").do(send_night_g2)
schedule.every().wednesday.at("10:30").do(send_g2)
schedule.every().thursday.at("06:30").do(send_g2)
schedule.every().thursday.at("18:30").do(send_g2)
schedule.every().friday.at("02:30").do(send_night_g2)
schedule.every().friday.at("14:30").do(send_g2)
schedule.every().friday.at("22:30").do(send_night_g2)
schedule.every().saturday.at("10:30").do(send_g2)
schedule.every().sunday.at("06:30").do(send_g2)
schedule.every().sunday.at("18:30").do(send_g2)

#–†–æ–∑—Å–∏–ª–∫–∞ –¥–ª—è 3 –≥—Ä—É–ø–∏
schedule.every().monday.at("02:30").do(send_night_g3)
schedule.every().monday.at("14:30").do(send_g3)
schedule.every().monday.at("22:30").do(send_night_g3)
schedule.every().tuesday.at("10:30").do(send_g3)
schedule.every().wednesday.at("06:30").do(send_g3)
schedule.every().wednesday.at("18:30").do(send_g3)
schedule.every().thursday.at("02:30").do(send_night_g3)
schedule.every().thursday.at("14:30").do(send_g3)
schedule.every().thursday.at("22:30").do(send_night_g3)
schedule.every().friday.at("10:30").do(send_g3)
schedule.every().saturday.at("06:30").do(send_g3)
schedule.every().saturday.at("18:30").do(send_g3)
schedule.every().sunday.at("02:30").do(send_night_g3)
schedule.every().sunday.at("14:30").do(send_g3)

#–†–æ–±–æ—Ç–∞ —Ä–æ–∑—Å–∏–ª–∫–∏(—ñ–Ω—à–∏–π –ø–æ—Ç—ñ–∫)
def threaded_function():
    while True:
        schedule.run_pending()
        time.sleep(1)

thread = Thread(target = threaded_function)
thread.daemon = True
thread.start()

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    connect = sqlite3.connect('database.db')
    cursor = connect.cursor()
    person_id = call.message.chat.id

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ 1 –≥—Ä—É–ø–∏
    if call.data == 'group1':
        if call.message.chat.username is None:
            if call.message.chat.last_name is None:
                loginchat = f"{call.message.chat.first_name}"
            else:
                loginchat = f"{call.message.chat.first_name} {call.message.chat.last_name}"
        else:
            loginchat = f"@{call.message.chat.username}"
        cursor.execute(f"SELECT user_id FROM database WHERE user_id = {person_id}")
        data_call_group = cursor.fetchone()
        if data_call_group is None:
            cursor.execute("INSERT INTO database VALUES(?, ?, ?, ?);", (person_id, "1", "1", "0",))
        else:
            cursor.execute("UPDATE database SET group_number = ? WHERE user_id = ?", ("1", person_id,))
        connect.commit()
        bot.edit_message_text(f'‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—è –¥–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å 1Ô∏è‚É£ –≥—Ä—É–ø–∏! \n\nüïê –í—ñ–¥—Ç–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω –¥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞. \nüîï –ó–∞–¥–ª—è –≤–∞—à–æ–≥–æ –∂ –∫–æ–º—Ñ–æ—Ä—Ç—É, —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –±—É–¥—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏—Å—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 08:00). \n\n –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –≥—Ä—É–ø—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∏–∂—á–µ.', reply_markup=None, chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_message(880691612, f"{loginchat} –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è(-–ª–∞—Å—å) –¥–æ 1 –≥—Ä—É–ø–∏")

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ 2 –≥—Ä—É–ø–∏
    elif call.data == 'group2':
        if call.message.chat.username is None:
            if call.message.chat.last_name is None:
                loginchat = f"{call.message.chat.first_name}"
            else:
                loginchat = f"{call.message.chat.first_name} {call.message.chat.last_name}"
        else:
            loginchat = f"@{call.message.chat.username}"
        cursor.execute(f"SELECT user_id FROM database WHERE user_id = {person_id}")
        data_call_group = cursor.fetchone()
        if data_call_group is None:
            cursor.execute("INSERT INTO database VALUES(?, ?, ?, ?);", (person_id, "2", "1", "0",))
        else:
            cursor.execute("UPDATE database SET group_number = ? WHERE user_id = ?", ("2", person_id,))
        connect.commit()
        bot.edit_message_text(f'‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—è –¥–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å 2Ô∏è‚É£ –≥—Ä—É–ø–∏! \n\nüïê –í—ñ–¥—Ç–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω –¥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞. \nüîï –ó–∞–¥–ª—è –≤–∞—à–æ–≥–æ –∂ –∫–æ–º—Ñ–æ—Ä—Ç—É, —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –±—É–¥—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏—Å—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 08:00). \n\n –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –≥—Ä—É–ø—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∏–∂—á–µ.', reply_markup=None, chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_message(880691612, f"{loginchat} –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è(-–ª–∞—Å—å) –¥–æ 2 –≥—Ä—É–ø–∏")

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ 3 –≥—Ä—É–ø–∏
    elif call.data == 'group3':
        if call.message.chat.username is None:
            if call.message.chat.last_name is None:
                loginchat = f"{call.message.chat.first_name}"
            else:
                loginchat = f"{call.message.chat.first_name} {call.message.chat.last_name}"
        else:
            loginchat = f"@{call.message.chat.username}"
        cursor.execute(f"SELECT user_id FROM database WHERE user_id = {person_id}")
        data_call_group = cursor.fetchone()
        if data_call_group is None:
            cursor.execute("INSERT INTO database VALUES(?, ?, ?, ?);", (person_id, "3", "1", "0",))
        else:
            cursor.execute("UPDATE database SET group_number = ? WHERE user_id = ?", ("3", person_id,))
        connect.commit()
        bot.edit_message_text(f'‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—è –¥–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å 3Ô∏è‚É£ –≥—Ä—É–ø–∏! \n\nüïê –í—ñ–¥—Ç–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω –¥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞. \nüîï –ó–∞–¥–ª—è –≤–∞—à–æ–≥–æ –∂ –∫–æ–º—Ñ–æ—Ä—Ç—É, —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –±—É–¥—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏—Å—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 08:00). \n\n –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –≥—Ä—É–ø—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∏–∂—á–µ.', reply_markup=None, chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_message(880691612, f"{loginchat} –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è(-–ª–∞—Å—å) –¥–æ 3 –≥—Ä—É–ø–∏")

# Call_data –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
# –ù—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    elif call.data == 'night_notice':
        cursor.execute(f"SELECT night FROM database WHERE user_id = {person_id}")
        data_check_night = cursor.fetchone()
        try:
            if data_check_night[0] == 0:
                markup_check_night_off = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("üåô –í–∫–ª—é—á–∏—Ç–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="night_notice_on")
                item2 = types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings")
                markup_check_night_off.add(item1, item2)
                bot.edit_message_text("üåô –ù–Ü–ß–ù–Ü –°–ü–û–í–Ü–©–ï–ù–ù–Ø: \n\n‚Ä¢ –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω—ñ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó, –±–æ—Ç –±—É–¥–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 08:00). \n‚ùå –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–∫–ª—é—á–µ–Ω—ñ, –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:", reply_markup=markup_check_night_off, chat_id=call.message.chat.id, message_id=call.message.message_id)
            elif data_check_night[0] == 1:
                markup_check_night_on = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("üåô –í–∏–∫–ª—é—á–∏—Ç–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data="night_notice_off")
                item2 = types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_settings")
                markup_check_night_on.add(item1, item2)
                bot.edit_message_text("üåô –ù–Ü–ß–ù–Ü –°–ü–û–í–Ü–©–ï–ù–ù–Ø: \n\n‚úÖ –ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –Ω—ñ—á–Ω–∏–π –ø–µ—Ä—ñ–æ–¥(–∑ 00:00 –¥–æ 08:00) –ø—ñ–¥–∫–ª—é—á–µ–Ω—ñ. \n–î–ª—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:", reply_markup=markup_check_night_on, chat_id=call.message.chat.id, message_id=call.message.message_id)
        except:
            edit.message_text("–ü–æ–º–∏–ª–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –¥–æ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏.", reply_markup=None, chat_id=call.message.chat.id, message_id=call.message.message_id)
        connect.commit()

    elif call.data == 'night_notice_on':
        cursor.execute(f"UPDATE database SET night = 1 WHERE user_id = {person_id}")
        bot.edit_message_text("‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. \n\n‚öô –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø:", reply_markup=markup_settings, chat_id=call.message.chat.id, message_id=call.message.message_id)
        connect.commit()

    elif call.data == 'night_notice_off':
        cursor.execute(f"UPDATE database SET night = 0 WHERE user_id = {person_id}")
        bot.edit_message_text("‚ùå –í–∏ –≤—ñ–¥–∫–ª—é—á–∏–ª–∏ –Ω—ñ—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. \n\n‚öô –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø:", reply_markup=markup_settings, chat_id=call.message.chat.id, message_id=call.message.message_id)
        connect.commit()

    elif call.data == "back_to_settings":
        bot.edit_message_text("‚öô –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø:", reply_markup=markup_settings, chat_id=call.message.chat.id, message_id=call.message.message_id)

# –ß–∞—Å –¥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
    elif call.data == "change_time_for_notice":
        pass

bot.polling()